{"version":3,"sources":["components/Navbar.js","pages/News.js","pages/Stats.js","pages/contact.js","Router.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","style","display","justifyContent","alignItems","to","News","Stats","useState","data","setData","active","setActive","confirmed","setConfirmed","deaths","setDeaths","recovered","setRecovered","Date","date","getData","a","axios","get","res","statewise","statedata","useEffect","map","item","index","textAlign","state","statecode","lastupdatedtime","split","getDate","getHours","Contact","Main","exact","path","component","Contacts","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbf1961d.chunk.js","sourcesContent":["import {} from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nconst Navbar=()=>{\r\n    return(\r\n    <div className=\"navbar\">\r\n        <div>\r\n            <h1>CovidStat</h1>\r\n        </div>\r\n        <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n            <ul className='navlist'>\r\n                <li><Link to='/covid'>Stats</Link></li>\r\n                <li><Link to='/News'>News</Link></li>\r\n                <li><Link to='/contacts'>Contacts</Link></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nconst News=()=>{\r\n    return(\r\n        <div></div>\r\n    )\r\n}\r\nexport default News","import React,{useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { } from 'bootstrap'\r\n\r\nconst Stats=()=>{\r\n    const [data,setData]= useState([])\r\n    const [active,setActive]= useState('')\r\n    const [confirmed,setConfirmed]= useState('')\r\n    const [deaths,setDeaths]= useState('')\r\n    const [recovered,setRecovered]= useState('')\r\n    const [date,setDate]= useState(new Date())\r\n\r\n    const getData= async() =>{\r\n        const res = await axios.get('https://api.covid19india.org/data.json')\r\n        const statedata= await res.data.statewise;\r\n        setData(statedata)\r\n        setActive(statedata[0].active)\r\n        setConfirmed(statedata[0].confirmed)\r\n        setDeaths(statedata[0].deaths)\r\n        setRecovered(statedata[0].recovered)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getData()\r\n    },[]);\r\n\r\n\r\n    return(\r\n        <div className='statstable'>\r\n            <div className='container-fluid mt-5 mb-5'>\r\n                <h1 className='heading'>Stats</h1>\r\n            </div>\r\n            <div className='totaldetails'>\r\n                <div className='confirmed'>\r\n                    <h5>Confirmed</h5>\r\n                    <h3>{confirmed}</h3>\r\n                </div>\r\n                <div className='active'>\r\n                    <h5> Active </h5>\r\n                    <h3>{active}</h3>\r\n                </div>\r\n                <div className='recovered'>\r\n                    <h5>Recovered</h5>\r\n                    <h3>{recovered}</h3>\r\n                </div>\r\n                <div className='death'>\r\n                    <h5>Death</h5>\r\n                    <h3>{deaths}</h3>\r\n                </div>\r\n            </div>\r\n            <div className='table-responsive'>\r\n                <table className='table table-hover'>\r\n                    <thead className='thead-black'>\r\n                        <tr>\r\n                            <th>State</th>\r\n                            <th>Confirmed</th>\r\n                            <th>Recovered</th>\r\n                            <th>Death</th>\r\n                            <th>Active</th>\r\n                            <th>Updated</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            data.map((item,index)=>{\r\n                                return(\r\n                                <tr key={index}>\r\n                                    <th style={{textAlign:'start'}}>{item.state} ({item.statecode})</th>\r\n                                    <td>{item.confirmed}</td>\r\n                                    <td>{item.recovered}</td>\r\n                                    <td>{item.deaths}</td>\r\n                                    <td>{item.active}</td>\r\n                                    <td>{item.lastupdatedtime.split('/')[0]>=date.getDate()-1 ? `${date.getHours()-item.lastupdatedtime.split('')[12]} Hours ago` : 'More Than day ago'}</td>\r\n                                </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Stats","import React from 'react'\r\n\r\nconst Contact=()=>{\r\n    return(\r\n        <div></div>\r\n    )\r\n}\r\nexport default Contact","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport News from './pages/News';\r\nimport Stats from './pages/Stats';\r\nimport Contacts from './pages/contact';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Switch> {/* The Switch decides which component to show based on the current URL.*/}\r\n\r\n      <Route exact path='/covidstat' component={Stats}></Route>\r\n      <Route path='/News' component={News}></Route>\r\n      <Route path='/Contact' component={Contacts}></Route>\r\n\r\n    </Switch>\r\n  \r\n  );\r\n}\r\n\r\nexport default Main;","import Navbar from './components/Navbar'\nimport Main  from './Router';\nimport {HashRouter as Router} from 'react-router-dom'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Navbar />\n      <Main />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}