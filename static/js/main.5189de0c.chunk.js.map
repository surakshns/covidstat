{"version":3,"sources":["components/Navbar.js","components/newscard.js","pages/News.js","pages/Stats.js","pages/contact.js","Router.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","active","setActive","className","to","activeClassName","onClick","Newscard","props","style","border","margin","borderRadius","padding","width","height","src","image","color","title","description","News","data","setData","getNews","a","axios","get","res","news","articles","console","log","useEffect","fontSize","map","item","urlToImage","Stats","confirmed","setConfirmed","filter","setfilter","deaths","setDeaths","recovered","setRecovered","Date","date","showgraph","setshowgraph","rows","setRows","getData","statewise","statedata","getcsv","fetch","response","reader","body","getReader","read","result","decoder","TextDecoder","csv","decode","value","results","Papa","parse","header","labels","datasets","label","fill","backgroundColor","borderColor","options","maintainAspectRatio","type","placeholder","onChange","e","target","state","toLowerCase","includes","statecode","lastupdatedtime","onsearch","index","textAlign","split","getDate","getHours","Contact","Main","exact","path","component","Contacts","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5189de0c.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar=()=>{\r\n    const [active,setActive]= useState('stats')\r\n    return(\r\n    <div className=\"navbar sticky-top\">\r\n        <div>\r\n            <h1>CovidStat</h1>\r\n        </div>\r\n        <div>\r\n            <ul className='navlist'>\r\n                <li><NavLink to=\"/\" activeClassName={active=='stats'? 'activenav' : ''} onClick={()=>{setActive('stats')}}>Stats</NavLink></li>\r\n                <li><NavLink to='/News' activeClassName={active=='News'? 'activenav' : ''} onClick={()=>{setActive('News')}}>News</NavLink></li>\r\n                <li><NavLink to='/contacts' activeClassName={active=='Contacts'? 'activenav' : ''} onClick={()=>{setActive('Contacts')}} >Contacts</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nconst Newscard=(props)=>{\r\n    return(\r\n        <div style={{border:'1px solid',margin:'4%',borderRadius:'20px'}}>\r\n            <img style={{padding:'2%'}} width='100%' height='100%' src={props.image} />\r\n            <div style={{padding:'5%'}}>\r\n            <h2 style={{color:'white'}}>{props.title}</h2>\r\n            <p>{props.description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Newscard","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Newscard from '../components/newscard'\r\n\r\nconst News=()=>{\r\n    const [data,setData]= useState([])\r\n\r\n    const getNews=async()=>{\r\n        const res = await axios.get('https://newsapi.org/v2/top-headlines?country=in&category=health&apiKey=4d258bd4b31f40c59180ce5b754b72e7')\r\n        const news= res.data.articles\r\n        setData(news)\r\n    }\r\n    console.log(data);\r\n\r\n    useEffect(()=>{\r\n        getNews()\r\n    },[]);\r\n\r\n    return(\r\n        <div className='newspage'>\r\n            <h1 className='heading'>Covid News</h1>\r\n            <div style={{padding:'5%'}}>\r\n                <div style={{fontSize:\"40px\"}}>All India's top healthcare news</div>\r\n                {\r\n                data.map((item)=>{\r\n                    return(\r\n                        <Newscard image={item.urlToImage} title={item.title} description={item.description} />\r\n                    )  \r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default News","import React,{useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { } from 'bootstrap'\r\nimport {Line} from 'react-chartjs-2'\r\nimport Papa from 'papaparse'\r\n\r\nconst Stats=()=>{\r\n    const [data,setData]= useState([])\r\n    const [active,setActive]= useState('')\r\n    const [confirmed,setConfirmed]= useState('')\r\n    const [filter,setfilter]= useState('')\r\n    const [deaths,setDeaths]= useState('')\r\n    const [recovered,setRecovered]= useState('')\r\n    const [date,setDate]= useState(new Date())\r\n    const [showgraph,setshowgraph] = useState('confirmed')\r\n    const [rows, setRows] = useState([])\r\n\r\n    const getData= async() =>{\r\n        const res = await axios.get('https://api.covid19india.org/data.json')\r\n        const statedata= await res.data.statewise;\r\n        setData(statedata)\r\n        setActive(statedata[0].active)\r\n        setConfirmed(statedata[0].confirmed)\r\n        setDeaths(statedata[0].deaths)\r\n        setRecovered(statedata[0].recovered)\r\n    }\r\n\r\n    const getcsv=async()=>{\r\n      const response = await fetch('./case_time_series.csv')\r\n      const reader = response.body.getReader()\r\n      const result = await reader.read() // raw array\r\n      const decoder = new TextDecoder('utf-8')\r\n      const csv = decoder.decode(result.value) // the csv text\r\n      const results = Papa.parse(csv, { header: true }) // object with { data, errors, meta }\r\n      const rows = results.data // array of objects\r\n      setRows(rows)\r\n    }\r\n    useEffect(()=>{\r\n        getData()\r\n        getcsv()\r\n    },[]);\r\n\r\n    const onsearch=(e)=>{\r\n        setfilter(e.target.value)\r\n        setData(data.filter((item) => (item.state.toLowerCase().includes(filter.toLowerCase()) || filter === '')).map(({state,statecode,confirmed,recovered,active,deaths,lastupdatedtime}) => ({state,confirmed,recovered,active,deaths,statecode,lastupdatedtime})))\r\n    }\r\n\r\n    return(\r\n        <div className='statstable'>\r\n            <div className='container-fluid mb-5'>\r\n                {/* <h1 className='heading'>Stats</h1> */}\r\n            </div>\r\n            <div className='totaldetails'>\r\n                <div className='confirmed box' onClick={()=>setshowgraph('confirmed')}>\r\n                    <h5>Confirmed</h5>\r\n                    <h3>{confirmed}</h3>\r\n                    { showgraph=='confirmed' ?\r\n                    <Line \r\n                        data={{ \r\n                            labels: rows,\r\n                            datasets: [\r\n                                {\r\n                                label: 'Confirmed',\r\n                                data: rows,\r\n                                fill: false,\r\n                                backgroundColor: 'rgb(255, 99, 132)',\r\n                                borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                                },\r\n                            ],\r\n                        }}\r\n                        height={300}\r\n                        width={500}\r\n                        options={{\r\n                            maintainAspectRatio:true\r\n                        }}\r\n                    />\r\n                    :\r\n                    null\r\n                }\r\n                </div>\r\n                <div className='active box' onClick={()=>setshowgraph('Active')}>\r\n                    <h5> Active </h5>\r\n                    <h3>{active}</h3>\r\n                    { showgraph=='Active' ?\r\n                    <Line \r\n                        data={{ \r\n                            labels: ['1', '2', '3', '4', '5', '6'],\r\n                            datasets: [\r\n                                {\r\n                                label: '# of Votes',\r\n                                data: [12, 19, 3, 5, 2, 3],\r\n                                fill: false,\r\n                                backgroundColor: 'rgb(255, 99, 132)',\r\n                                borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                                },\r\n                            ],\r\n                        }}\r\n                        height={300}\r\n                        width={500}\r\n                        options={{\r\n                            maintainAspectRatio:true\r\n                        }}\r\n                    />\r\n                    :\r\n                    null\r\n                }\r\n                </div>\r\n                <div className='recovered box' onClick={()=>setshowgraph('recovered')}>\r\n                    <h5>Recovered</h5>\r\n                    <h3>{recovered}</h3>\r\n                    { showgraph=='recovered' ?\r\n                    <Line \r\n                        data={{ \r\n                            labels: ['1', '2', '3', '4', '5', '6'],\r\n                            datasets: [\r\n                                {\r\n                                label: '# of Votes',\r\n                                data: [12, 19, 3, 5, 2, 3],\r\n                                fill: false,\r\n                                backgroundColor: 'rgb(255, 99, 132)',\r\n                                borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                                },\r\n                            ],\r\n                        }}\r\n                        height={300}\r\n                        width={500}\r\n                        options={{\r\n                            maintainAspectRatio:true\r\n                        }}\r\n                    />\r\n                    :\r\n                    null\r\n                }\r\n                </div>\r\n                <div className='death box' onClick={()=>setshowgraph('Death')}>\r\n                    <h5>Death</h5>\r\n                    <h3>{deaths}</h3>\r\n                    { showgraph=='Death' ?\r\n                    <Line \r\n                        data={{ \r\n                            labels: ['1', '2', '3', '4', '5', '6'],\r\n                            datasets: [\r\n                                {\r\n                                label: '# of Votes',\r\n                                data: [12, 19, 3, 5, 2, 3],\r\n                                fill: false,\r\n                                backgroundColor: 'rgb(255, 99, 132)',\r\n                                borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                                },\r\n                            ],\r\n                        }}\r\n                        height={300}\r\n                        width={500}\r\n                        options={{\r\n                            maintainAspectRatio:true\r\n                        }}\r\n                    />\r\n                    :\r\n                    null\r\n                }\r\n                </div>\r\n            </div>\r\n            <input className='search' type={'text'} placeholder={'Search'} value={filter} onChange={(e)=>onsearch(e)} />\r\n            <div className='table-responsive'>\r\n                <table className='table table-hover'>\r\n                    <thead className='thead-black'>\r\n                        <tr>\r\n                            <th >State</th>\r\n                            <th className='confirmed'>Confirmed</th>\r\n                            <th className='recovered'>Recovered</th>\r\n                            <th className='death'>Death</th>\r\n                            <th className='active'>Active</th>\r\n                            <th>Updated</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            data.map((item,index)=>{\r\n                                return(\r\n                                <tr key={index}>\r\n                                    <th style={{textAlign:'start'}}>{item.state} ({item.statecode})</th>\r\n                                    <td className='confirmed'>{item.confirmed}</td>\r\n                                    <td className='recovered'>{item.recovered}</td>\r\n                                    <td className='death'>{item.deaths}</td>\r\n                                    <td className='active'>{item.active}</td>\r\n                                    <td>{item.lastupdatedtime.split('/')[0]>=date.getDate()-1 ? (date.getHours()-item.lastupdatedtime.split('')[12])>=0 ? `${date.getHours()-item.lastupdatedtime.split('')[12]} hours ago` : `${date.getHours()+24-item.lastupdatedtime.split('')[12]} hours ago` : 'More Than day ago'}</td>\r\n                                </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Stats","import React from 'react'\r\n\r\nconst Contact=()=>{\r\n    return(\r\n        <div></div>\r\n    )\r\n}\r\nexport default Contact","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport News from './pages/News';\r\nimport Stats from './pages/Stats';\r\nimport Contacts from './pages/contact';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Switch> {/* The Switch decides which component to show based on the current URL.*/}\r\n\r\n      <Route exact path='/' component={Stats}></Route>\r\n      <Route path='/News' component={News}></Route>\r\n      <Route path='/Contact' component={Contacts}></Route>\r\n\r\n    </Switch>\r\n  \r\n  );\r\n}\r\n\r\nexport default Main;","import Navbar from './components/Navbar'\nimport Main  from './Router';\nimport {HashRouter as Router} from 'react-router-dom'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Navbar />\n      <Main />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}